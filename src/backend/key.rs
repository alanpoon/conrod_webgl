use conrod::input::Key;
pub fn key_vec()->Vec<(i16,bool,Key)>{ //bool->shift
    vec![
    (8,false,Key::Backspace),
    (9,false,Key::Tab),
    (13,false,Key::Return),
    (27,false,Key::Escape),
    (32,false,Key::Space),
    (49,true,Key::Exclaim),
    (50,true,Key::Quotedbl),
    (51,true,Key::Hash),
    (52,true,Key::Dollar),
    (53,true,Key::Percent),
    (55,true,Key::Ampersand),
    (222,true,Key::Quote),
    (221,true,Key::LeftParen),
    (222,true,Key::RightParen),
    (56,true,Key::Asterisk),
    (187,true,Key::Plus),
    (188,false,Key::Comma),
    (109,false,Key::Minus),
    (190,false,Key::Period),
    (191,false,Key::Slash),
    (48,false,Key::D0),
    (49,false,Key::D1),
    (50,false,Key::D2),
    (51,false,Key::D3),
    (52,false,Key::D4),
    (53,false,Key::D5),
    (54,false,Key::D6),
    (55,false,Key::D7),
    (56,false,Key::D8),
    (57,false,Key::D9),
    (186,false,Key::Colon),
    (186,true,Key::Semicolon),
    (188,true,Key::Less),
    (187,false,Key::Equals),
    (190,true,Key::Greater),
    (191,true,Key::Question),
    (50,true,Key::At),
    (219,false,Key::LeftBracket),
    (220,false,Key::Backslash),
    (221,false,Key::RightBracket),
    (54,true,Key::Caret),
    (189,true,Key::Underscore),
    (222,false,Key::Backquote),
    (65,false,Key::A),
    (66,false,Key::B),
    (67,false,Key::C),
    (68,false,Key::D),
    (69,false,Key::E),
    (70,false,Key::F),
    (71,false,Key::G),
    (72,false,Key::H),
    (73,false,Key::I),
    (74,false,Key::J),
    (75,false,Key::K),
    (76,false,Key::L),
    (77,false,Key::M),
    (78,false,Key::N),
    (79,false,Key::O),
    (80,false,Key::P),
    (81,false,Key::Q),
    (82,false,Key::R),
    (83,false,Key::S),
    (84,false,Key::T),
    (85,false,Key::U),
    (86,false,Key::V),
    (87,false,Key::W),
    (88,false,Key::X),
    (89,false,Key::Y),
    (90,false,Key::Z),
    (46,false,Key::Delete),
    (20,false,Key::CapsLock),
    (112,false,Key::F1),
    (113,false,Key::F2),
    (114,false,Key::F3),
    (115,false,Key::F4),
    (116,false,Key::F5),
    (117,false,Key::F6),
    (118,false,Key::F7),
    (119,false,Key::F8),
    (120,false,Key::F9),
    (121,false,Key::F10),
    (123,false,Key::F11),
    (124,false,Key::F12),
    (145,false,Key::ScrollLock),
    (19,false,Key::Pause),
    (45,false,Key::Insert),
    (36,false,Key::Home),
    (33,false,Key::PageUp),
    (35,false,Key::End),
    (34,false,Key::PageDown),
    (39,false,Key::Right),
    (37,false,Key::Left),
    (40,false,Key::Down),
    (38,false,Key::Up),
    (144,false,Key::NumLockClear),
    (111,false,Key::NumPadDivide),
    (106,false,Key::NumPadMultiply),
    (109,false,Key::NumPadMinus),
    (107,false,Key::NumPadPlus),
    (97,false,Key::NumPad1),
    (98,false,Key::NumPad2),
    (99,false,Key::NumPad3),
    (100,false,Key::NumPad4),
    (101,false,Key::NumPad5),
    (102,false,Key::NumPad6),
    (103,false,Key::NumPad7),
    (104,false,Key::NumPad8),
    (105,false,Key::NumPad9),
    (96,false,Key::NumPad0),
 ]
}